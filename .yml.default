# P2p
P2P_PORT: 9911
P2P_PEER_ID:
P2P_SWARM_KEY:
P2P_ANNOUNCES:
  - /ip4/192.168.3.186/tcp/9911
P2P_BOOTSTRAPPERS:
  - /ip4/8.140.247.159/tcp/8011/p2p/QmUNaruC7WfHNLeFNH2CUPBWLVPzjDg5shj2zs9nGaajSL


#
#   whether to diagnose the publishing result; log publishData
#
P2P_RELAY_DIAGNOSE_PUBLISHING_RESULT: true


#
#   READONLY :
#   mark whether the current node is the leader and the leader's peerId
#
P2P_RELAY_IS_LEADER : false
P2P_RELAY_LEADER_PEER_ID:


#
#   use the groupKey to further partition subnet groups,
#   in a private P2P network segmented by the swarmKey.
#
P2P_RELAY_GROUP_KEY: debeem-p2p-relay
#   whether to attempt to proactively dial to group members who are not yet connected
P2P_RELAY_GROUP_TRIGGER_DIAL: true
#   all members in group
P2P_RELAY_GROUP_MEMBERS:
  - /ip4/192.168.3.6/tcp/61610/p2p/QmaS6HGfowodZa1AQvWZmSu6S3kaZDgZ8mPdmnwzH9tinz
  - /ip4/192.168.3.6/tcp/61611/p2p/QmY2jcGpRciCDpGKa2SbHNMzvWmeBKBYBEjGiEmnHZ9hJq



#
#   min log level
#
P2P_RELAY_LOGGER_MIN_LOG_LEVEL: debug


# cache
REDIS_PORT: 6379
REDIS_HOST: host.docker.internal
REDIS_USERNAME:
REDIS_PASSWORD:
REDIS_DB: 0
